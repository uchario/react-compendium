{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uchechukwu.ariolu\\\\Downloads\\\\react\\\\simple_forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => {\n    value.trim() !== '';\n  });\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"vZCSTn9K+dAbX05q6tfeRBN/imE=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","enteredNameIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"sources":["C:/Users/uchechukwu.ariolu/Downloads/react/simple_forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const { \n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n   } = useInput(value => {value.trim() !== ''});\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n  \n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched; \n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    \n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text'  \n          id='name' \n          value={enteredName}\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n        />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='email'  \n          id='email' \n          value={enteredEmail}\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputIsInvalid && <p className='error-text'>Please enter a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}